
name: CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  OUTPUT_FORMAT: csv
  OUTPUT_ARTIFACTS_NAME: Scans
  PROWLER_USER_ACCESS_KEY_ID: ${{ secrets.PROWLER_USER_ACCESS_KEY_ID }}
  PROWLER_USER_SECRET_KEY_ID: ${{ secrets.PROWLER_USER_SECRET_KEY_ID }}
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3
        with:
          python-version: '3.x'
    
      - name: Install AWS CLI
        run: |
          sudo apt install awscli
          aws --version

      - name: Install Prowler
        run: |
          pip install prowler

      - name: Configure AWS Credentials
        run: |
          aws configure set aws_access_key_id $PROWLER_USER_ACCESS_KEY_ID --profile DB
          aws configure set aws_secret_access_key $PROWLER_USER_SECRET_KEY_ID --profile DB

      - name: Run Prowler for Each Sub Account
        run: |
            python -c "
            import json
            import os
    
            with open('sub-accounts.json', 'r') as file:
                config = json.load(file)
    
            for account in config:
                command = f'prowler -p DB -R arn:aws:iam::{account['accountNumber']}:role/Prowler-Security-User-Assign-Role -M $OUTPUT_FORMAT --output-filename {account['name']} --output-directory /home/runner/work/${{ github.repository }}/prowler-output'
                print(f'Executing: {command}')
                os.system(command)
            "
        shell: bash
        continue-on-error: true

      - name: Run Prowler for Each Control Tower Account
        run: |
            python -c "
            import json
            import os
    
            with open('control-tower-accounts.json', 'r') as file:
                config = json.load(file)
    
            for account in config:
                command = f'prowler -p DB -M $OUTPUT_FORMAT --output-filename {account['name']} --output-directory /home/runner/work/${{ github.repository }}/prowler-output'
                print(f'Executing: {command}')
                os.system(command)
            "
        shell: bash
        continue-on-error: true






